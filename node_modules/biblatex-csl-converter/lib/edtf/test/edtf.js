'use strict';

var edtf = require('..');

describe('edtf', function () {

  it('is a function', function () {
    return expect(edtf).to.be.a('function');
  });

  it('returns dates by default', function () {
    return expect(edtf()).to.be.a.date.and.an.edtf;
  });

  it('parses strings', function () {
    expect(edtf('2016-03')).to.be.an.edtf.and.produce([2016, 2]);

    expect(edtf('[2016-03]')).to.be.instanceof(edtf.Set);
    expect(edtf('{2016..2020}')).to.be.instanceof(edtf.List);
    expect(edtf('2016/2019')).to.be.instanceof(edtf.Interval);
    expect(edtf('2016-21')).to.be.instanceof(edtf.Season);
    expect(edtf('Y210001')).to.be.instanceof(edtf.Year);
  });

  it('creates new extended date objects', function () {
    expect(edtf([2016, 2])).to.be.an.edtf.and.produce([2016, 2]);

    var a = new edtf.Date([2016]);

    expect(edtf(a)).to.be.an.edtf.and.produce([2016]).and.not.equal(a);
  });

  it('roundtrips', function () {
    var _arr = ['2016', '2016-05', '2016-05-31', '2016?', '2016-05?', '2016-05-31?', '2016~-05?', '2016-~05'];

    for (var _i = 0; _i < _arr.length; _i++) {
      var string = _arr[_i];expect(edtf(string).edtf).to.eql(string);
    }
  });
});