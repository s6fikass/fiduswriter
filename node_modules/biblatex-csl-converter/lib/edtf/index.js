'use strict';

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Bitmask = require('./src/bitmask');
var types = require('./src/types');

var _require = require('./src/sample'),
    sample = _require.sample;

var _require2 = require('./src/parser'),
    parse = _require2.parse;

var _require3 = require('./src/format'),
    format = _require3.format;

var assign = _assign2.default,
    keys = _keys2.default;


function edtf() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  if (!args.length) return new edtf.Date();

  if (args.length === 1 && (0, _typeof3.default)(args[0]) === 'object') return new (edtf[args[0].type] || edtf.Date)(args[0]);

  var res = parse.apply(undefined, args);
  return new edtf[res.type](res);
}

module.exports = assign(edtf, types, {
  Bitmask: Bitmask,
  parse: parse,
  sample: sample,
  format: format,
  types: keys(types)
});