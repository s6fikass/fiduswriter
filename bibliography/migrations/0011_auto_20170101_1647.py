# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-01 22:47
from __future__ import unicode_literals
from builtins import range
from tornado.escape import json_decode, json_encode

from django.db import migrations

# return False if it is an empty text node, otherwise True
def not_empty_text(obj):
    if (
        isinstance(obj, dict) and \
        'type' in obj and \
        obj['type'] == 'text' and \
        'text' in obj and \
        obj['text'] == ''
    ):
        return False
    return True

# Remove all empty text nodes from bibliography fields to comply with prosemirror
def remove_empty_textnodes(apps, schema_editor):
    # We can't import the model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    Entry = apps.get_model("bibliography", "Entry")
    for entry in Entry.objects.all():
        fields = json_decode(entry.fields)

        for field in fields:
            # fix eprintclass from l_literal to f_literal
            if (
                field == 'eprintclass' and \
                isinstance(fields[field], list) and \
                len(fields[field]) > 0 and \
                isinstance(fields[field][0], list)
            ):
                fields[field] = fields[field][0]
            # remove empty text nodes
            if (
                isinstance(fields[field], list) and \
                len(fields[field]) > 0
            ):
                if isinstance(fields[field][0], dict):
                    fields[field] = [x for x in fields[field] if not_empty_text(x)]
                    for i in range(len(fields[field])):
                        for subfield in fields[field][i]:
                            if isinstance(fields[field][i][subfield], list):
                                fields[field][i][subfield] = \
                                    [x for x in fields[field][i][subfield] if not_empty_text(x)]
                elif isinstance(fields[field][0], list):
                    for i in range(len(fields[field])):
                        if (
                            isinstance(fields[field][i], list) and \
                            len(fields[field][i]) > 0 and \
                            isinstance(fields[field][i][0], dict)
                        ):
                            fields[field][i] = [
                                x for x in fields[field][i] if not_empty_text(x)
                            ]
            elif isinstance(fields[field], dict):
                for subfield in fields[field]:
                    if (
                        isinstance(fields[field][subfield], list) and \
                        len(fields[field][subfield]) > 0 and \
                        isinstance(fields[field][subfield][0], dict)
                    ):
                        fields[field][subfield] = [
                            x for x in fields[field][subfield] if not_empty_text(x)
                        ]
        entry.fields = json_encode(fields)
        entry.save()


class Migration(migrations.Migration):

    dependencies = [
        ('bibliography', '0010_auto_20161207_0133'),
    ]

    operations = [
        migrations.RunPython(remove_empty_textnodes),
    ]
