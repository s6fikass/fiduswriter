{"modules":{"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/common/index.js":{"file":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/common/index.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/** Creates a dropdown box.\n * @param btn The button to open and close the dropdown box.\n * @param box The node containing the contents of the dropdown box.\n */\n\nvar addDropdownBox = exports.addDropdownBox = function addDropdownBox(btn, box) {\n    btn.bind('mousedown', function (event) {\n        event.preventDefault();\n        if (btn.hasClass('disabled')) {\n            return;\n        }\n        if ('none' == box.css('display')) {\n            openDropdownBox(box);\n        }\n    });\n};\n\n/** Opens a dropdown box.\n * @param box The node containing the contents of the dropdown box.\n */\n\nvar openDropdownBox = function openDropdownBox(box) {\n    // Show this box\n    box.show();\n    // Give that the dropdown menu was opened through a mousedown event, there\n    // will be a first click event following it. We will wait for the second\n    // click event.\n    jQuery(document).one('click', function () {\n        jQuery(document).one('click', function (event) {\n            event.preventDefault();\n            box.hide();\n        });\n    });\n};\n\n/** Checkes or uncheckes a checkable label. This is used for example for bibliography categories when editing bibliography items.\n * @param label The node who's parent has to be checked or unchecked.\n */\nvar setCheckableLabel = exports.setCheckableLabel = function setCheckableLabel(label) {\n    var checkbox = label.parent().find('input[type=checkbox]');\n    if (label.hasClass('checked')) {\n        label.removeClass('checked');\n    } else {\n        label.addClass('checked');\n    }\n};\n\n/** Cover the page signaling to the user to wait.\n */\nvar activateWait = exports.activateWait = function activateWait() {\n    jQuery('#wait').addClass('active');\n};\n\n/** Remove the wait cover.\n */\nvar deactivateWait = exports.deactivateWait = function deactivateWait() {\n    jQuery('#wait').removeClass('active');\n};\n\n/** Show a message to the user.\n * @param alertType The type of message that is shown (error, warning, info or success).\n * @param alertMsg The message text.\n */\nvar addAlert = exports.addAlert = function addAlert(alertType, alertMsg) {\n    var fadeSpeed = 300;\n    var iconNames = {\n        'error': 'icon-attention-circle',\n        'warning': 'icon-attention-circle',\n        'info': 'icon-info-circle',\n        'success': 'icon-ok'\n    };\n    var alertBox = jQuery('<li class=\"alerts-' + alertType + ' ' + iconNames[alertType] + '\">' + alertMsg + '</li>');\n    if (0 === jQuery('#alerts-outer-wrapper').length) jQuery('body').append('<div id=\"alerts-outer-wrapper\"><ul id=\"alerts-wrapper\"></ul></div>');\n    jQuery('#alerts-wrapper').append(alertBox);\n    alertBox.fadeTo(fadeSpeed, 1, function () {\n        jQuery(this).delay('2000').fadeOut(fadeSpeed, function () {\n            jQuery(this).remove();\n        });\n    });\n};\n\n/** Turn milliseconds since epoch (UTC) into a local date string.\n * @param {number} milliseconds Number of milliseconds since epoch (1/1/1970 midnight, UTC).\n * @param {boolean} sortable Whether the result should appear in a date only list.\n */\nvar localizeDate = exports.localizeDate = function localizeDate(milliseconds, sortable) {\n    milliseconds = parseInt(milliseconds);\n    if (milliseconds > 0) {\n        var theDate = new Date(milliseconds);\n        if (true === sortable) {\n            var yyyy = theDate.getFullYear(),\n                mm = theDate.getMonth() + 1,\n                dd = theDate.getDate();\n\n            if (10 > mm) {\n                mm = '0' + mm;\n            }\n\n            return yyyy + '/' + mm + '/' + dd;\n        } else {\n            return theDate.toLocaleString();\n        }\n    } else {\n        return '';\n    }\n};\n\n/** Get cookie to set as part of the request header of all AJAX requests to the server.\n * @param name The name of the token to look for in the cookie.\n */\nvar getCookie = exports.getCookie = function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = jQuery.trim(cookies[i]);\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) == name + '=') {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n};\n\n/**\n * The Cross Site Request Forgery (CSRF) token\n */\nvar csrfToken = exports.csrfToken = getCookie('csrftoken');\n\n/**\n * Turn string literals into single line, removing spaces at start of line\n */\n\nvar noSpaceTmp = exports.noSpaceTmp = function noSpaceTmp(strings) {\n    var values = [].slice.call(arguments);\n    var tmpStrings = [].slice.call(values.shift());\n\n    var combined = \"\";\n    while (tmpStrings.length > 0 || values.length > 0) {\n        if (tmpStrings.length > 0) {\n            combined += tmpStrings.shift();\n        }\n        if (values.length > 0) {\n            combined += values.shift();\n        }\n    }\n\n    var out = \"\";\n    combined.split('\\n').forEach(function (line) {\n        out += line.replace(/^\\s*/g, '');\n    });\n    return out;\n};\n\n/**\n * Return a cancel promise if you need to cancel a promise chain. Import as\n * ES6 promises are not (yet) cancelable.\n */\n\nvar cancelPromise = exports.cancelPromise = function cancelPromise() {\n    return new Promise(function () {});\n};\n//# sourceMappingURL=data:application/json;base64,","deps":{}},"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/templates.js":{"file":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/templates.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/** A template to edit image categories. */\nvar usermediaEditcategoriesTemplate = exports.usermediaEditcategoriesTemplate = _.template('\\\n    <div id=\"editCategories\" title=\"<%- dialogHeader %>\">\\\n        <table id=\"editCategoryList\" class=\"fw-dialog-table\"><tbody><%= categories %></tbody></table>\\\n    </div>');\n\n/** A template for the image category edit form. */\nvar usermediaCategoryformsTemplate = exports.usermediaCategoryformsTemplate = _.template('\\\n    <% _.each(categories, function(cat) { %>\\\n    <tr id=\"categoryTr_<%- cat.id %>\" class=\"fw-list-input\">\\\n        <td>\\\n            <input type=\"text\" class=\"category-form\" id=\"categoryTitle_<%- cat.id %>\" value=\"<%= cat.category_title %>\" data-id=\"<%- cat.id %>\" />\\\n            <span class=\"fw-add-input icon-addremove\"></span>\\\n        </td>\\\n    </tr>\\\n    <% }) %>\\\n    <tr class=\"fw-list-input\">\\\n        <td>\\\n            <input type=\"text\" class=\"category-form\" />\\\n            <span class=\"fw-add-input icon-addremove\"></span>\\\n        </td>\\\n    </tr>');\n\n/** A template for image overview list. */\nvar usermediaTableTemplate = exports.usermediaTableTemplate = _.template('\\\n                <tr id=\"Image_<%- pk %>\" class=\"<% _.each(cats, function(cat) { %>cat_<%- cat %> <% }) %>\">\\\n                    <td width=\"30\">\\\n                        <span class=\"fw-inline\">\\\n                            <input type=\"checkbox\" class=\"entry-select\" data-id=\"<%- pk %>\">\\\n                        </span>\\\n                    </td>\\\n                    <td width=\"350\" class=\"title\">\\\n                        <span class=\"fw-usermedia-image\">\\\n                            <img src=\"<% if(thumbnail) { %><%- thumbnail %><% } else { %><%- image %><% } %>\">\\\n                        </span>\\\n                        <span class=\"fw-inline fw-usermedia-title\">\\\n                            <span class=\"edit-image fw-link-text fw-searchable\" data-id=\"<%- pk %>\">\\\n                                <%- title !== \"\" ? title : \"' + gettext('Untitled') + '\" %>\\\n                            </span>\\\n                            <span class=\"fw-usermedia-type\"><%- fileType %></span>\\\n                        </span>\\\n                    </td>\\\n                    <td width=\"170\" class=\"type \">\\\n                        <span class=\"fw-inline\"><%- width %> x <%- height %></span>\\\n                    </td>\\\n                    <td width=\"170\" class=\"file_type \">\\\n                        <span class=\"fw-inline\"><%= localizeDate(added, true) %></span>\\\n                    </td>\\\n                    <td width=\"50\" align=\"center\">\\\n                        <span class=\"delete-image fw-inline fw-link-text\" data-id=\"<%- pk %>\" data-title=\"<%- title %>\">\\\n                            <i class=\"icon-trash\"></i>\\\n                        </span>\\\n                    </td>\\\n                </tr>');\n\n/* A template for each image category list item */\nvar usermediaCategoryListItemTemplate = exports.usermediaCategoryListItemTemplate = _.template('\\\n    <li>\\\n        <span class=\"fw-pulldown-item\" data-id=\"<%- iCat.id %>\">\\\n            <%- iCat.category_title %>\\\n        </span>\\\n    </li>');\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlcy5qcyJdLCJuYW1lcyI6WyJ1c2VybWVkaWFFZGl0Y2F0ZWdvcmllc1RlbXBsYXRlIiwiXyIsInRlbXBsYXRlIiwidXNlcm1lZGlhQ2F0ZWdvcnlmb3Jtc1RlbXBsYXRlIiwidXNlcm1lZGlhVGFibGVUZW1wbGF0ZSIsImdldHRleHQiLCJ1c2VybWVkaWFDYXRlZ29yeUxpc3RJdGVtVGVtcGxhdGUiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsQUFDQTtBQUFPLElBQUksOEVBQWtDLEFBQUUsU0FBeEMsQUFBc0MsQUFBVzs7O1dBQVg7O0FBSzdDLEFBQ0E7QUFBTyxJQUFJLDRFQUFpQyxBQUFFLFNBQXZDLEFBQXFDLEFBQVc7Ozs7Ozs7Ozs7Ozs7O1VBQVg7O0FBZ0I1QyxBQUNBO0FBQU8sSUFBSSw0REFBeUIsQUFBRTs7Ozs7Ozs7Ozs7Ozs2REFBUyxHQWFlLFFBYmYsQUFhZSxBQUFRLGNBYi9ELEFBQTZCLEFBYThDOzs7Ozs7Ozs7Ozs7Ozs7O3NCQWI5Qzs7QUErQnBDLEFBQ0E7QUFBTyxJQUFJLGtGQUFvQyxBQUFFLFNBQTFDLEFBQXdDLEFBQVc7Ozs7O1VBQVgiLCJmaWxlIjoidGVtcGxhdGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEEgdGVtcGxhdGUgdG8gZWRpdCBpbWFnZSBjYXRlZ29yaWVzLiAqL1xuZXhwb3J0IGxldCB1c2VybWVkaWFFZGl0Y2F0ZWdvcmllc1RlbXBsYXRlID0gXy50ZW1wbGF0ZSgnXFxcbiAgICA8ZGl2IGlkPVwiZWRpdENhdGVnb3JpZXNcIiB0aXRsZT1cIjwlLSBkaWFsb2dIZWFkZXIgJT5cIj5cXFxuICAgICAgICA8dGFibGUgaWQ9XCJlZGl0Q2F0ZWdvcnlMaXN0XCIgY2xhc3M9XCJmdy1kaWFsb2ctdGFibGVcIj48dGJvZHk+PCU9IGNhdGVnb3JpZXMgJT48L3Rib2R5PjwvdGFibGU+XFxcbiAgICA8L2Rpdj4nKVxuXG4vKiogQSB0ZW1wbGF0ZSBmb3IgdGhlIGltYWdlIGNhdGVnb3J5IGVkaXQgZm9ybS4gKi9cbmV4cG9ydCBsZXQgdXNlcm1lZGlhQ2F0ZWdvcnlmb3Jtc1RlbXBsYXRlID0gXy50ZW1wbGF0ZSgnXFxcbiAgICA8JSBfLmVhY2goY2F0ZWdvcmllcywgZnVuY3Rpb24oY2F0KSB7ICU+XFxcbiAgICA8dHIgaWQ9XCJjYXRlZ29yeVRyXzwlLSBjYXQuaWQgJT5cIiBjbGFzcz1cImZ3LWxpc3QtaW5wdXRcIj5cXFxuICAgICAgICA8dGQ+XFxcbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiY2F0ZWdvcnktZm9ybVwiIGlkPVwiY2F0ZWdvcnlUaXRsZV88JS0gY2F0LmlkICU+XCIgdmFsdWU9XCI8JT0gY2F0LmNhdGVnb3J5X3RpdGxlICU+XCIgZGF0YS1pZD1cIjwlLSBjYXQuaWQgJT5cIiAvPlxcXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZ3LWFkZC1pbnB1dCBpY29uLWFkZHJlbW92ZVwiPjwvc3Bhbj5cXFxuICAgICAgICA8L3RkPlxcXG4gICAgPC90cj5cXFxuICAgIDwlIH0pICU+XFxcbiAgICA8dHIgY2xhc3M9XCJmdy1saXN0LWlucHV0XCI+XFxcbiAgICAgICAgPHRkPlxcXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImNhdGVnb3J5LWZvcm1cIiAvPlxcXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZ3LWFkZC1pbnB1dCBpY29uLWFkZHJlbW92ZVwiPjwvc3Bhbj5cXFxuICAgICAgICA8L3RkPlxcXG4gICAgPC90cj4nKVxuXG4vKiogQSB0ZW1wbGF0ZSBmb3IgaW1hZ2Ugb3ZlcnZpZXcgbGlzdC4gKi9cbmV4cG9ydCBsZXQgdXNlcm1lZGlhVGFibGVUZW1wbGF0ZSA9IF8udGVtcGxhdGUoJ1xcXG4gICAgICAgICAgICAgICAgPHRyIGlkPVwiSW1hZ2VfPCUtIHBrICU+XCIgY2xhc3M9XCI8JSBfLmVhY2goY2F0cywgZnVuY3Rpb24oY2F0KSB7ICU+Y2F0XzwlLSBjYXQgJT4gPCUgfSkgJT5cIj5cXFxuICAgICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9XCIzMFwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZ3LWlubGluZVwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiZW50cnktc2VsZWN0XCIgZGF0YS1pZD1cIjwlLSBwayAlPlwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XFxcbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cXFxuICAgICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9XCIzNTBcIiBjbGFzcz1cInRpdGxlXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZnctdXNlcm1lZGlhLWltYWdlXCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIjwlIGlmKHRodW1ibmFpbCkgeyAlPjwlLSB0aHVtYm5haWwgJT48JSB9IGVsc2UgeyAlPjwlLSBpbWFnZSAlPjwlIH0gJT5cIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZ3LWlubGluZSBmdy11c2VybWVkaWEtdGl0bGVcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZWRpdC1pbWFnZSBmdy1saW5rLXRleHQgZnctc2VhcmNoYWJsZVwiIGRhdGEtaWQ9XCI8JS0gcGsgJT5cIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8JS0gdGl0bGUgIT09IFwiXCIgPyB0aXRsZSA6IFwiJytnZXR0ZXh0KCdVbnRpdGxlZCcpKydcIiAlPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmdy11c2VybWVkaWEtdHlwZVwiPjwlLSBmaWxlVHlwZSAlPjwvc3Bhbj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxcXG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XFxcbiAgICAgICAgICAgICAgICAgICAgPHRkIHdpZHRoPVwiMTcwXCIgY2xhc3M9XCJ0eXBlIFwiPlxcXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImZ3LWlubGluZVwiPjwlLSB3aWR0aCAlPiB4IDwlLSBoZWlnaHQgJT48L3NwYW4+XFxcbiAgICAgICAgICAgICAgICAgICAgPC90ZD5cXFxuICAgICAgICAgICAgICAgICAgICA8dGQgd2lkdGg9XCIxNzBcIiBjbGFzcz1cImZpbGVfdHlwZSBcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJmdy1pbmxpbmVcIj48JT0gbG9jYWxpemVEYXRlKGFkZGVkLCB0cnVlKSAlPjwvc3Bhbj5cXFxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxcXG4gICAgICAgICAgICAgICAgICAgIDx0ZCB3aWR0aD1cIjUwXCIgYWxpZ249XCJjZW50ZXJcIj5cXFxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJkZWxldGUtaW1hZ2UgZnctaW5saW5lIGZ3LWxpbmstdGV4dFwiIGRhdGEtaWQ9XCI8JS0gcGsgJT5cIiBkYXRhLXRpdGxlPVwiPCUtIHRpdGxlICU+XCI+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImljb24tdHJhc2hcIj48L2k+XFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cXFxuICAgICAgICAgICAgICAgICAgICA8L3RkPlxcXG4gICAgICAgICAgICAgICAgPC90cj4nKVxuXG4vKiBBIHRlbXBsYXRlIGZvciBlYWNoIGltYWdlIGNhdGVnb3J5IGxpc3QgaXRlbSAqL1xuZXhwb3J0IGxldCB1c2VybWVkaWFDYXRlZ29yeUxpc3RJdGVtVGVtcGxhdGUgPSBfLnRlbXBsYXRlKCdcXFxuICAgIDxsaT5cXFxuICAgICAgICA8c3BhbiBjbGFzcz1cImZ3LXB1bGxkb3duLWl0ZW1cIiBkYXRhLWlkPVwiPCUtIGlDYXQuaWQgJT5cIj5cXFxuICAgICAgICAgICAgPCUtIGlDYXQuY2F0ZWdvcnlfdGl0bGUgJT5cXFxuICAgICAgICA8L3NwYW4+XFxcbiAgICA8L2xpPicpXG4iXX0=","deps":{}},"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/database.js":{"file":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/database.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ImageDB = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _common = require('../common');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* A class that holds information about images uploaded by the user. */\n\nvar ImageDB = exports.ImageDB = function () {\n    function ImageDB(userId) {\n        _classCallCheck(this, ImageDB);\n\n        this.userId = userId;\n        this.db = {};\n        this.cats = [];\n    }\n\n    _createClass(ImageDB, [{\n        key: 'getDB',\n        value: function getDB() {\n            var _this = this;\n\n            this.db = {};\n            this.cats = [];\n\n            (0, _common.activateWait)();\n            return new Promise(function (resolve, reject) {\n                jQuery.ajax({\n                    url: '/usermedia/images/',\n                    data: {\n                        'owner_id': _this.userId\n                    },\n                    type: 'POST',\n                    dataType: 'json',\n                    crossDomain: false, // obviates need for sameOrigin test\n                    beforeSend: function beforeSend(xhr, settings) {\n                        return xhr.setRequestHeader(\"X-CSRFToken\", _common.csrfToken);\n                    },\n                    success: function success(response, textStatus, jqXHR) {\n                        _this.cats = response.imageCategories;\n                        var pks = [];\n                        for (var i = 0; i < response.images.length; i++) {\n                            response.images[i].image = response.images[i].image.split('?')[0];\n                            _this.db[response.images[i]['pk']] = response.images[i];\n                            pks.push(response.images[i]['pk']);\n                        }\n                        resolve(pks);\n                    },\n                    error: function error(jqXHR, textStatus, errorThrown) {\n                        (0, _common.addAlert)('error', jqXHR.responseText);\n                        reject();\n                    },\n                    complete: function complete() {\n                        return (0, _common.deactivateWait)();\n                    }\n                });\n            });\n        }\n    }, {\n        key: 'createImage',\n        value: function createImage(postData) {\n            var _this2 = this;\n\n            (0, _common.activateWait)();\n            // Remove old warning messages\n            jQuery('#uploadimage .warning').detach();\n\n            return new Promise(function (resolve, reject) {\n                // Send to server\n                jQuery.ajax({\n                    url: '/usermedia/save/',\n                    data: postData,\n                    type: 'POST',\n                    dataType: 'json',\n                    crossDomain: false, // obviates need for sameOrigin test\n                    beforeSend: function beforeSend(xhr, settings) {\n                        return xhr.setRequestHeader(\"X-CSRFToken\", _common.csrfToken);\n                    },\n                    success: function success(response, textStatus, jqXHR) {\n                        if (_this2.displayCreateImageError(response.errormsg)) {\n                            _this2.db[response.values.pk] = response.values;\n                            (0, _common.addAlert)('success', gettext('The image has been uploaded'));\n                            resolve(response.values.pk);\n                        } else {\n                            (0, _common.addAlert)('error', gettext('Some errors are found. Please examine the form.'));\n                            reject();\n                        }\n                    },\n                    error: function error(jqXHR, textStatus, errorThrown) {\n                        if (jqXHR && jqXHR.responseJSON && jqXHR.responseJSON.errormsg) {\n                            (0, _common.addAlert)('error', jqXHR.responseJSON.errormsg);\n                        }\n                        reject();\n                    },\n                    complete: function complete() {\n                        return (0, _common.deactivateWait)();\n                    },\n                    cache: false,\n                    contentType: false,\n                    processData: false\n                });\n            });\n        }\n    }, {\n        key: 'displayCreateImageError',\n        value: function displayCreateImageError(errors) {\n            var noError = true;\n            for (var eKey in errors) {\n                var eMsg = '<div class=\"warning\">' + errors[eKey] + '</div>';\n                if ('error' == eKey) {\n                    jQuery('#uploadimage').prepend(eMsg);\n                } else {\n                    jQuery('#id_' + eKey).after(eMsg);\n                }\n                noError = false;\n            }\n            return noError;\n        }\n    }]);\n\n    return ImageDB;\n}();\n//# sourceMappingURL=data:application/json;base64,","deps":{"../common":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/common/index.js"}},"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/menu/index.js":{"file":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/menu/index.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Menu = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _common = require('../common');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Bindings for the menu\n\nvar Menu = exports.Menu = function () {\n    function Menu(activeItem) {\n        _classCallCheck(this, Menu);\n\n        this.activeItem = activeItem;\n        this.bind();\n    }\n\n    _createClass(Menu, [{\n        key: 'bind',\n        value: function bind() {\n            var _this = this;\n\n            jQuery(document).ready(function () {\n                _this.markCurrentlyActive();\n                _this.bindPreferencePullDown();\n            });\n        }\n    }, {\n        key: 'markCurrentlyActive',\n        value: function markCurrentlyActive() {\n            // Mark currently active menu item\n            var active = jQuery('body > header a[data-item=\"' + this.activeItem + '\"]');\n            active.addClass('active');\n            active.parent().addClass('active-menu-wrapper');\n        }\n    }, {\n        key: 'bindPreferencePullDown',\n        value: function bindPreferencePullDown() {\n            var box = jQuery('#user-preferences-pulldown');\n            var button = jQuery('#preferences-btn');\n            (0, _common.addDropdownBox)(button, box);\n\n            // In addition to adding the dropdown, we also need to add some css\n            // values so that the dropdown is placed close to #preferences-btn\n            jQuery('#preferences-btn').bind('mousedown', function () {\n                var btnOffset = button.offset();\n                box.css({\n                    'left': btnOffset.left - 52,\n                    'top': btnOffset.top + 27\n                });\n            });\n            // As a click will close the pulldown, we need to activate the link by means of a mousedown already.\n            jQuery(document).on('mousedown', '#user-preferences-pulldown a', function (event) {\n                event.preventDefault();\n                window.location = jQuery(this).attr('href');\n            });\n            // Same for form button\n            jQuery(document).on('mousedown', '#user-preferences-pulldown button[type=\"submit\"]', function (event) {\n                event.preventDefault();\n                jQuery(this).closest('form').submit();\n            });\n        }\n    }]);\n\n    return Menu;\n}();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFkZERyb3Bkb3duQm94IiwiTWVudSIsImNvbnN0cnVjdG9yIiwiYWN0aXZlSXRlbSIsImJpbmQiLCJqUXVlcnkiLCJkb2N1bWVudCIsInJlYWR5IiwibWFya0N1cnJlbnRseUFjdGl2ZSIsImJpbmRQcmVmZXJlbmNlUHVsbERvd24iLCJhY3RpdmUiLCJhZGRDbGFzcyIsInBhcmVudCIsImJveCIsImJ1dHRvbiIsImJ0bk9mZnNldCIsIm9mZnNldCIsImNzcyIsImxlZnQiLCJ0b3AiLCJvbiIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImF0dHIiLCJjbG9zZXN0Iiwic3VibWl0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxBQUFRLEFBQXFCOzs7O0FBRTdCLEFBRUEsQUFBTzs7SUFBQSxBQUFNLEFBQUssQUFDZDtrQkFBQSxBQUFZO0FBQVksQUFDcEI7O2FBQUEsQUFBSyxhQUFMLEFBQWtCLEFBQ2xCO2FBQUEsQUFBSyxBQUNSO0FBRUQ7Ozs7O0FBQU8sQUFDSDs7bUJBQUEsQUFBTyxVQUFQLEFBQWlCLE1BQU0sWUFBTSxBQUN6QjtzQkFBQSxBQUFLLEFBQ0w7c0JBQUEsQUFBSyxBQUNSO0FBSEQsQUFJSDtBQUVEOzs7OENBQXNCLEFBQ2xCO0FBQ0E7Z0JBQUksU0FBUyxBQUFRLHVDQUE2QixLQUFsRCxBQUFhLEFBQTBDLEFBQVcsQUFDbEU7bUJBQUEsQUFBTyxTQUFQLEFBQWdCLEFBQ2hCO21CQUFBLEFBQU8sU0FBUCxBQUFnQixTQUFoQixBQUF5QixBQUM1QjtBQUVEOzs7aURBQXlCLEFBQ3JCO2dCQUFJLE1BQU0sT0FBVixBQUFVLEFBQU8sQUFDakI7Z0JBQUksU0FBUyxPQUFiLEFBQWEsQUFBTyxBQUNwQjt3Q0FBQSxBQUFlLFFBQWYsQUFBdUIsQUFFdkI7O0FBQ0E7QUFDQTttQkFBQSxBQUFPLG9CQUFQLEFBQTJCLEtBQTNCLEFBQWdDLGFBQWEsWUFBTSxBQUMvQztvQkFBSSxZQUFZLE9BQWhCLEFBQWdCLEFBQU8sQUFDdkI7b0JBQUEsQUFBSTs0QkFDUSxVQUFBLEFBQVUsT0FEZCxBQUNxQixBQUN6QjsyQkFBTyxVQUFBLEFBQVUsTUFGckIsQUFBUSxBQUVtQixBQUU5QjtBQUpXLEFBQ0o7QUFIUixBQU9BO0FBQ0E7bUJBQUEsQUFBTyxVQUFQLEFBQWlCLEdBQWpCLEFBQW9CLGFBQXBCLEFBQWlDLGdDQUFnQyxVQUFBLEFBQVMsT0FBTyxBQUM3RTtzQkFBQSxBQUFNLEFBQ047dUJBQUEsQUFBTyxXQUFXLE9BQUEsQUFBTyxNQUFQLEFBQWEsS0FBL0IsQUFBa0IsQUFBa0IsQUFDdkM7QUFIRCxBQUlBO0FBQ0E7bUJBQUEsQUFBTyxVQUFQLEFBQWlCLEdBQWpCLEFBQW9CLGFBQXBCLEFBQWlDLG9EQUFvRCxVQUFBLEFBQVMsT0FBTyxBQUNqRztzQkFBQSxBQUFNLEFBQ047dUJBQUEsQUFBTyxNQUFQLEFBQWEsUUFBYixBQUFxQixRQUFyQixBQUE2QixBQUNoQztBQUhELEFBSUg7QUE1Q2EiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2FkZERyb3Bkb3duQm94fSBmcm9tIFwiLi4vY29tbW9uXCJcblxuLy8gQmluZGluZ3MgZm9yIHRoZSBtZW51XG5cbmV4cG9ydCBjbGFzcyBNZW51IHtcbiAgICBjb25zdHJ1Y3RvcihhY3RpdmVJdGVtKSB7XG4gICAgICAgIHRoaXMuYWN0aXZlSXRlbSA9IGFjdGl2ZUl0ZW1cbiAgICAgICAgdGhpcy5iaW5kKClcbiAgICB9XG5cbiAgICBiaW5kKCkge1xuICAgICAgICBqUXVlcnkoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMubWFya0N1cnJlbnRseUFjdGl2ZSgpXG4gICAgICAgICAgICB0aGlzLmJpbmRQcmVmZXJlbmNlUHVsbERvd24oKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIG1hcmtDdXJyZW50bHlBY3RpdmUoKSB7XG4gICAgICAgIC8vIE1hcmsgY3VycmVudGx5IGFjdGl2ZSBtZW51IGl0ZW1cbiAgICAgICAgbGV0IGFjdGl2ZSA9IGpRdWVyeShgYm9keSA+IGhlYWRlciBhW2RhdGEtaXRlbT1cIiR7dGhpcy5hY3RpdmVJdGVtfVwiXWApXG4gICAgICAgIGFjdGl2ZS5hZGRDbGFzcygnYWN0aXZlJylcbiAgICAgICAgYWN0aXZlLnBhcmVudCgpLmFkZENsYXNzKCdhY3RpdmUtbWVudS13cmFwcGVyJylcbiAgICB9XG5cbiAgICBiaW5kUHJlZmVyZW5jZVB1bGxEb3duKCkge1xuICAgICAgICBsZXQgYm94ID0galF1ZXJ5KCcjdXNlci1wcmVmZXJlbmNlcy1wdWxsZG93bicpXG4gICAgICAgIGxldCBidXR0b24gPSBqUXVlcnkoJyNwcmVmZXJlbmNlcy1idG4nKVxuICAgICAgICBhZGREcm9wZG93bkJveChidXR0b24sIGJveClcblxuICAgICAgICAvLyBJbiBhZGRpdGlvbiB0byBhZGRpbmcgdGhlIGRyb3Bkb3duLCB3ZSBhbHNvIG5lZWQgdG8gYWRkIHNvbWUgY3NzXG4gICAgICAgIC8vIHZhbHVlcyBzbyB0aGF0IHRoZSBkcm9wZG93biBpcyBwbGFjZWQgY2xvc2UgdG8gI3ByZWZlcmVuY2VzLWJ0blxuICAgICAgICBqUXVlcnkoJyNwcmVmZXJlbmNlcy1idG4nKS5iaW5kKCdtb3VzZWRvd24nLCAoKSA9PiB7XG4gICAgICAgICAgICBsZXQgYnRuT2Zmc2V0ID0gYnV0dG9uLm9mZnNldCgpXG4gICAgICAgICAgICBib3guY3NzKHtcbiAgICAgICAgICAgICAgICAnbGVmdCc6IGJ0bk9mZnNldC5sZWZ0IC0gNTIsXG4gICAgICAgICAgICAgICAgJ3RvcCc6IGJ0bk9mZnNldC50b3AgKyAyN1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgICAgLy8gQXMgYSBjbGljayB3aWxsIGNsb3NlIHRoZSBwdWxsZG93biwgd2UgbmVlZCB0byBhY3RpdmF0ZSB0aGUgbGluayBieSBtZWFucyBvZiBhIG1vdXNlZG93biBhbHJlYWR5LlxuICAgICAgICBqUXVlcnkoZG9jdW1lbnQpLm9uKCdtb3VzZWRvd24nLCAnI3VzZXItcHJlZmVyZW5jZXMtcHVsbGRvd24gYScsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBqUXVlcnkodGhpcykuYXR0cignaHJlZicpXG4gICAgICAgIH0pXG4gICAgICAgIC8vIFNhbWUgZm9yIGZvcm0gYnV0dG9uXG4gICAgICAgIGpRdWVyeShkb2N1bWVudCkub24oJ21vdXNlZG93bicsICcjdXNlci1wcmVmZXJlbmNlcy1wdWxsZG93biBidXR0b25bdHlwZT1cInN1Ym1pdFwiXScsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICBqUXVlcnkodGhpcykuY2xvc2VzdCgnZm9ybScpLnN1Ym1pdCgpXG4gICAgICAgIH0pXG4gICAgfVxufVxuIl19","deps":{"../common":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/common/index.js"}},"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/categories.js":{"file":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/categories.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ImageOverviewCategories = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _templates = require(\"./templates\");\n\nvar _common = require(\"../../common\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ImageOverviewCategories = exports.ImageOverviewCategories = function () {\n    function ImageOverviewCategories(imageOverview) {\n        _classCallCheck(this, ImageOverviewCategories);\n\n        this.imageOverview = imageOverview;\n        imageOverview.mod.categories = this;\n    }\n    //save changes or create a new category\n\n\n    _createClass(ImageOverviewCategories, [{\n        key: \"createCategory\",\n        value: function createCategory(cats) {\n            var _this = this;\n\n            var postData = {\n                'ids[]': cats.ids,\n                'titles[]': cats.titles\n            };\n            (0, _common.activateWait)();\n            jQuery.ajax({\n                url: '/usermedia/save_category/',\n                data: postData,\n                type: 'POST',\n                dataType: 'json',\n                crossDomain: false, // obviates need for sameOrigin test\n                beforeSend: function beforeSend(xhr, settings) {\n                    return xhr.setRequestHeader(\"X-CSRFToken\", _common.csrfToken);\n                },\n                success: function success(response, textStatus, jqXHR) {\n                    if (jqXHR.status == 201) {\n                        // TODO: Why do we reload the entire list when one new category is created?\n                        _this.imageOverview.imageDB.cats = response.entries;\n                        jQuery('#image-category-list li').not(':first').remove();\n                        _this.addImageCategoryList(response.entries);\n\n                        (0, _common.addAlert)('success', gettext('The categories have been updated'));\n                    }\n                },\n                error: function error(jqXHR, textStatus, errorThrown) {\n                    (0, _common.addAlert)('error', jqXHR.responseText);\n                },\n                complete: function complete() {\n                    return (0, _common.deactivateWait)();\n                }\n            });\n        }\n    }, {\n        key: \"addImageCategoryList\",\n        value: function addImageCategoryList(newimageCategories) {\n            //imageCategories = imageCategories.concat(newimageCategories)\n            for (var i = 0; i < newimageCategories.length; i++) {\n                this.appendToImageCatList(newimageCategories[i]);\n            }\n        }\n    }, {\n        key: \"appendToImageCatList\",\n        value: function appendToImageCatList(iCat) {\n            jQuery('#image-category-list').append((0, _templates.usermediaCategoryListItemTemplate)({\n                'iCat': iCat\n            }));\n        }\n\n        //delete an image category\n\n    }, {\n        key: \"deleteCategory\",\n        value: function deleteCategory(ids) {\n            var postData = {\n                'ids[]': ids\n            };\n            jQuery.ajax({\n                url: '/usermedia/delete_category/',\n                data: postData,\n                type: 'POST',\n                dataType: 'json',\n                crossDomain: false, // obviates need for sameOrigin test\n                beforeSend: function beforeSend(xhr, settings) {\n                    return xhr.setRequestHeader(\"X-CSRFToken\", _common.csrfToken);\n                }\n            });\n        }\n\n        //open a dialog for editing categories\n\n    }, {\n        key: \"createCategoryDialog\",\n        value: function createCategoryDialog() {\n            var dialogHeader = gettext('Edit Categories');\n            var dialogBody = (0, _templates.usermediaEditcategoriesTemplate)({\n                'dialogHeader': dialogHeader,\n                'categories': (0, _templates.usermediaCategoryformsTemplate)({\n                    'categories': this.imageOverview.imageDB.cats\n                })\n            });\n            jQuery('body').append(dialogBody);\n            var diaButtons = {};\n            var that = this;\n            diaButtons[gettext('Submit')] = function () {\n                var newCat = {\n                    'ids': [],\n                    'titles': []\n                };\n                var deletedCats = [];\n                jQuery('#editCategories .category-form').each(function () {\n                    var thisVal = jQuery.trim(jQuery(this).val());\n                    var thisId = jQuery(this).attr('data-id');\n                    if ('undefined' == typeof thisId) thisId = 0;\n                    if ('' !== thisVal) {\n                        newCat.ids.push(thisId);\n                        newCat.titles.push(thisVal);\n                    } else if ('' === thisVal && 0 < thisId) {\n                        deletedCats.push(thisId);\n                    }\n                });\n                that.deleteCategory(deletedCats);\n                that.createCategory(newCat);\n                jQuery(this).dialog('close');\n            };\n            diaButtons[gettext('Cancel')] = function () {\n                jQuery(this).dialog('close');\n            };\n            jQuery(\"#editCategories\").dialog({\n                resizable: false,\n                width: 350,\n                height: 350,\n                modal: true,\n                buttons: diaButtons,\n                create: function create() {\n                    var theDialog = jQuery(this).closest(\".ui-dialog\");\n                    theDialog.find(\".ui-button:first-child\").addClass(\"fw-button fw-dark\");\n                    theDialog.find(\".ui-button:last\").addClass(\"fw-button fw-orange\");\n                },\n                close: function close() {\n                    return jQuery(\"#editCategories\").dialog('destroy').remove();\n                }\n            });\n            this.addRemoveListHandler();\n        }\n    }, {\n        key: \"addRemoveListHandler\",\n        value: function addRemoveListHandler() {\n            //add and remove name list field\n            jQuery('.fw-add-input').bind('click', function () {\n                var parent = jQuery(this).parents('.fw-list-input');\n                if (0 === parent.next().length) {\n                    var parentClone = parent.clone(true);\n                    parentClone.find('input, select').val('').removeAttr('data-id');\n                    parentClone.insertAfter(parent);\n                } else {\n                    var thePrev = jQuery(this).prev();\n                    if (thePrev.hasClass(\"category-form\")) {\n                        // TODO: Figure out what this was about\n                        //let thisId = thePrev.attr('data-id')\n                        //if (undefined !== thisId)\n                        //    deleted_cat[deleted_cat.length] = thisId\n                    }\n                    parent.remove();\n                }\n            });\n            jQuery('.dk').dropkick();\n        }\n    }]);\n\n    return ImageOverviewCategories;\n}();\n//# sourceMappingURL=data:application/json;base64,","deps":{"./templates":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/templates.js","../../common":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/common/index.js"}},"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/upload-dialog/templates.js":{"file":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/upload-dialog/templates.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/* A template for the form for the image upload dialog. */\nvar usermediaUploadTemplate = exports.usermediaUploadTemplate = _.template('<div id=\"uploadimage\" class=\"fw-media-uploader\" title=\"<%- action %>\">\\\n    <form action=\"#\" method=\"post\" class=\"usermediaUploadForm\">\\\n        <div>\\\n            <input name=\"title\" class=\"fw-media-title fw-media-form\" type=\"text\" placeholder=\"' + gettext('Insert a title') + '\" value=\"<%- title %>\" />\\\n            <button type=\"button\" class=\"fw-media-select-button fw-button fw-light\">' + gettext('Select a file') + '</button>\\\n            <input name=\"image\" type=\"file\" class=\"fw-media-file-input fw-media-form\">\\\n        </div>\\\n        <div class=\"figure-preview\"><div>\\\n            <% if(image) { %><img src=\"<%- image %>\" /><% } %>\\\n        </div></div>\\\n        <%= categories %>\\\n    </form></div>');\n\n/* A template for the image category selection of the image selection dialog. */\nvar usermediaUploadCategoryTemplate = exports.usermediaUploadCategoryTemplate = _.template('<% if(0 < categories.length) { %>\\\n        <div class=\"fw-media-category\">\\\n            <div><%- fieldTitle %></div>\\\n            <% _.each(categories, function(cat) { %>\\\n                <label class=\"fw-checkable fw-checkable-label<%- cat.checked %>\" for=\"imageCat<%- cat.id %>\">\\\n                    <%- cat.category_title %>\\\n                </label>\\\n                <input class=\"fw-checkable-input fw-media-form entry-cat\" type=\"checkbox\"\\\n                    id=\"imageCat<%- cat.id %>\" name=\"imageCat\" value=\"<%- cat.id %>\"<%- cat.checked %>>\\\n            <% }); %>\\\n        </div>\\\n    <% } %>');\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlcy5qcyJdLCJuYW1lcyI6WyJ1c2VybWVkaWFVcGxvYWRUZW1wbGF0ZSIsIl8iLCJ0ZW1wbGF0ZSIsImdldHRleHQiLCJ1c2VybWVkaWFVcGxvYWRDYXRlZ29yeVRlbXBsYXRlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLEFBQ0E7QUFBTyxJQUFJLDhEQUEwQixBQUFFLFNBQVM7OztrR0FHa0QsUUFIbEQsQUFHa0QsQUFBUSxvQkFIMUQsQUFHOEU7d0ZBRTlHLFFBTGdDLEFBS2hDLEFBQVEsbUJBTGpCLEFBQThCLEFBTXpCOzs7Ozs7O2tCQU55Qjs7QUFlckMsQUFDQTtBQUFPLElBQUksOEVBQWtDLEFBQUUsU0FBeEMsQUFBc0MsQUFBVzs7Ozs7Ozs7Ozs7WUFBWCIsImZpbGUiOiJ0ZW1wbGF0ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBIHRlbXBsYXRlIGZvciB0aGUgZm9ybSBmb3IgdGhlIGltYWdlIHVwbG9hZCBkaWFsb2cuICovXG5leHBvcnQgbGV0IHVzZXJtZWRpYVVwbG9hZFRlbXBsYXRlID0gXy50ZW1wbGF0ZSgnPGRpdiBpZD1cInVwbG9hZGltYWdlXCIgY2xhc3M9XCJmdy1tZWRpYS11cGxvYWRlclwiIHRpdGxlPVwiPCUtIGFjdGlvbiAlPlwiPlxcXG4gICAgPGZvcm0gYWN0aW9uPVwiI1wiIG1ldGhvZD1cInBvc3RcIiBjbGFzcz1cInVzZXJtZWRpYVVwbG9hZEZvcm1cIj5cXFxuICAgICAgICA8ZGl2PlxcXG4gICAgICAgICAgICA8aW5wdXQgbmFtZT1cInRpdGxlXCIgY2xhc3M9XCJmdy1tZWRpYS10aXRsZSBmdy1tZWRpYS1mb3JtXCIgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIicgKyBnZXR0ZXh0KCdJbnNlcnQgYSB0aXRsZScpICsgJ1wiIHZhbHVlPVwiPCUtIHRpdGxlICU+XCIgLz5cXFxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJmdy1tZWRpYS1zZWxlY3QtYnV0dG9uIGZ3LWJ1dHRvbiBmdy1saWdodFwiPicgK1xuICAgICAgICAgICAgICAgIGdldHRleHQoJ1NlbGVjdCBhIGZpbGUnKSArXG4gICAgICAgICAgICAnPC9idXR0b24+XFxcbiAgICAgICAgICAgIDxpbnB1dCBuYW1lPVwiaW1hZ2VcIiB0eXBlPVwiZmlsZVwiIGNsYXNzPVwiZnctbWVkaWEtZmlsZS1pbnB1dCBmdy1tZWRpYS1mb3JtXCI+XFxcbiAgICAgICAgPC9kaXY+XFxcbiAgICAgICAgPGRpdiBjbGFzcz1cImZpZ3VyZS1wcmV2aWV3XCI+PGRpdj5cXFxuICAgICAgICAgICAgPCUgaWYoaW1hZ2UpIHsgJT48aW1nIHNyYz1cIjwlLSBpbWFnZSAlPlwiIC8+PCUgfSAlPlxcXG4gICAgICAgIDwvZGl2PjwvZGl2PlxcXG4gICAgICAgIDwlPSBjYXRlZ29yaWVzICU+XFxcbiAgICA8L2Zvcm0+PC9kaXY+JylcblxuLyogQSB0ZW1wbGF0ZSBmb3IgdGhlIGltYWdlIGNhdGVnb3J5IHNlbGVjdGlvbiBvZiB0aGUgaW1hZ2Ugc2VsZWN0aW9uIGRpYWxvZy4gKi9cbmV4cG9ydCBsZXQgdXNlcm1lZGlhVXBsb2FkQ2F0ZWdvcnlUZW1wbGF0ZSA9IF8udGVtcGxhdGUoJzwlIGlmKDAgPCBjYXRlZ29yaWVzLmxlbmd0aCkgeyAlPlxcXG4gICAgICAgIDxkaXYgY2xhc3M9XCJmdy1tZWRpYS1jYXRlZ29yeVwiPlxcXG4gICAgICAgICAgICA8ZGl2PjwlLSBmaWVsZFRpdGxlICU+PC9kaXY+XFxcbiAgICAgICAgICAgIDwlIF8uZWFjaChjYXRlZ29yaWVzLCBmdW5jdGlvbihjYXQpIHsgJT5cXFxuICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImZ3LWNoZWNrYWJsZSBmdy1jaGVja2FibGUtbGFiZWw8JS0gY2F0LmNoZWNrZWQgJT5cIiBmb3I9XCJpbWFnZUNhdDwlLSBjYXQuaWQgJT5cIj5cXFxuICAgICAgICAgICAgICAgICAgICA8JS0gY2F0LmNhdGVnb3J5X3RpdGxlICU+XFxcbiAgICAgICAgICAgICAgICA8L2xhYmVsPlxcXG4gICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwiZnctY2hlY2thYmxlLWlucHV0IGZ3LW1lZGlhLWZvcm0gZW50cnktY2F0XCIgdHlwZT1cImNoZWNrYm94XCJcXFxuICAgICAgICAgICAgICAgICAgICBpZD1cImltYWdlQ2F0PCUtIGNhdC5pZCAlPlwiIG5hbWU9XCJpbWFnZUNhdFwiIHZhbHVlPVwiPCUtIGNhdC5pZCAlPlwiPCUtIGNhdC5jaGVja2VkICU+PlxcXG4gICAgICAgICAgICA8JSB9KTsgJT5cXFxuICAgICAgICA8L2Rpdj5cXFxuICAgIDwlIH0gJT4nKVxuIl19","deps":{}},"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/upload-dialog/index.js":{"file":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/upload-dialog/index.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ImageUploadDialog = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _templates = require(\"./templates\");\n\nvar _common = require(\"../../common\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ImageUploadDialog = exports.ImageUploadDialog = function () {\n    function ImageUploadDialog(imageDB, imageId, ownerId) {\n        _classCallCheck(this, ImageUploadDialog);\n\n        this.imageDB = imageDB;\n        this.imageId = imageId;\n        this.ownerId = ownerId;\n    }\n\n    //open a dialog for uploading an image\n\n\n    _createClass(ImageUploadDialog, [{\n        key: \"init\",\n        value: function init() {\n            var _this = this;\n\n            var title = void 0,\n                imageCat = void 0,\n                thumbnail = void 0,\n                image = void 0,\n                action = void 0,\n                longAction = void 0;\n            if (this.imageId) {\n                title = this.imageDB.db[this.imageId].title;\n                thumbnail = this.imageDB.db[this.imageId].thumbnail;\n                image = this.imageDB.db[this.imageId].image;\n                imageCat = this.imageDB.db[this.imageId].cats;\n                action = gettext('Update');\n                longAction = gettext('Update image');\n            } else {\n                this.imageId = 0;\n                title = '';\n                imageCat = [];\n                thumbnail = false;\n                image = false;\n                action = gettext('Upload');\n                longAction = gettext('Upload image');\n            }\n\n            var iCats = [];\n            jQuery.each(this.imageDB.cats, function (i, iCat) {\n                var len = iCats.length;\n                iCats[len] = {\n                    'id': iCat.id,\n                    'category_title': iCat.category_title\n                };\n                if (0 <= jQuery.inArray(String(iCat.id), imageCat)) {\n                    iCats[len].checked = ' checked';\n                } else {\n                    iCats[len].checked = '';\n                }\n            });\n\n            jQuery('body').append((0, _templates.usermediaUploadTemplate)({\n                'action': longAction,\n                'title': title,\n                'thumbnail': thumbnail,\n                'image': image,\n                'categories': (0, _templates.usermediaUploadCategoryTemplate)({\n                    'categories': iCats,\n                    'fieldTitle': gettext('Select categories')\n                })\n            }));\n            var diaButtons = {};\n\n            var returnPromise = new Promise(function (resolve) {\n                diaButtons[action] = function () {\n                    return resolve(_this.onCreateImageSubmitHandler());\n                };\n\n                diaButtons[gettext('Cancel')] = function () {\n                    jQuery(this).dialog('close');\n                    resolve((0, _common.cancelPromise)());\n                };\n            });\n\n            var that = this;\n            jQuery(\"#uploadimage\").dialog({\n                resizable: false,\n                height: 'auto',\n                width: 'auto',\n                modal: true,\n                buttons: diaButtons,\n                create: function create() {\n                    var theDialog = jQuery(this).closest(\".ui-dialog\");\n                    theDialog.find(\".ui-button:first-child\").addClass(\"fw-button fw-dark\");\n                    theDialog.find(\".ui-button:last\").addClass(\"fw-button fw-orange\");\n                    that.setMediaUploadEvents(jQuery('#uploadimage'));\n                },\n                close: function close() {\n                    return jQuery(\"#uploadimage\").dialog('destroy').remove();\n                }\n\n            });\n\n            jQuery('.fw-checkable-label').bind('click', function () {\n                (0, _common.setCheckableLabel)(jQuery(this));\n            });\n            return returnPromise;\n        }\n\n        //add image upload events\n\n    }, {\n        key: \"setMediaUploadEvents\",\n        value: function setMediaUploadEvents(wrapper) {\n            var selectButton = wrapper.find('.fw-media-select-button'),\n                mediaInput = wrapper.find('.fw-media-file-input'),\n                mediaPreviewer = wrapper.find('.figure-preview > div');\n\n            selectButton.bind('click', function () {\n                return mediaInput.trigger('click');\n            });\n\n            mediaInput.bind('change', function () {\n                var file = jQuery(this).prop('files')[0],\n                    fr = new window.FileReader();\n\n                fr.onload = function () {\n                    mediaPreviewer.html('<img src=\"' + fr.result + '\" />');\n                };\n                fr.readAsDataURL(file);\n            });\n        }\n    }, {\n        key: \"onCreateImageSubmitHandler\",\n        value: function onCreateImageSubmitHandler() {\n            //when submitted, the values in form elements will be restored\n            var formValues = new window.FormData(),\n                checkboxValues = {};\n\n            formValues.append('id', this.imageId);\n\n            if (this.ownerId) {\n                formValues.append('owner_id', this.ownerId);\n            }\n\n            jQuery('.fw-media-form').each(function () {\n                var $this = jQuery(this);\n                var theName = $this.attr('name') || $this.attr('data-field-name');\n                var theType = $this.attr('type') || $this.attr('data-type');\n                var theValue = '';\n\n                switch (theType) {\n                    case 'checkbox':\n                        //if it is a checkbox, the value will be restored as an Array\n                        if (undefined === checkboxValues[theName]) checkboxValues[theName] = [];\n                        if ($this.prop(\"checked\")) {\n                            checkboxValues[theName].push($this.val());\n                        }\n                        return;\n                    case 'file':\n                        theValue = $this.get(0).files[0];\n                        break;\n                    default:\n                        theValue = $this.val();\n                }\n\n                formValues.append(theName, theValue);\n            });\n\n            // Add the values for check boxes\n            for (var key in checkboxValues) {\n                formValues.append(key, checkboxValues[key].join(','));\n            }\n            return this.createImage(formValues);\n        }\n    }, {\n        key: \"createImage\",\n        value: function createImage(imageData) {\n            var _this2 = this;\n\n            return new Promise(function (resolve) {\n                _this2.imageDB.createImage(imageData).then(function (imageId) {\n                    jQuery(\"#uploadimage\").dialog('close');\n                    _this2.imageId = imageId;\n                    resolve(imageId);\n                });\n            });\n        }\n    }]);\n\n    return ImageUploadDialog;\n}();\n//# sourceMappingURL=data:application/json;base64,","deps":{"../../common":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/common/index.js","./templates":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/upload-dialog/templates.js"}},"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/index.js":{"file":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/index.js","source":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ImageOverview = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _uploadDialog = require(\"../upload-dialog\");\n\nvar _database = require(\"../database\");\n\nvar _categories = require(\"./categories\");\n\nvar _common = require(\"../../common\");\n\nvar _menu = require(\"../../menu\");\n\nvar _templates = require(\"./templates\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** Helper functions for user added images/SVGs.*/\n\nvar ImageOverview = exports.ImageOverview = function () {\n    function ImageOverview() {\n        _classCallCheck(this, ImageOverview);\n\n        this.mod = {};\n        new _categories.ImageOverviewCategories(this);\n        new _menu.Menu(\"images\");\n        this.bind();\n    }\n\n    //delete image\n\n\n    _createClass(ImageOverview, [{\n        key: \"deleteImage\",\n        value: function deleteImage(ids) {\n            var _this = this;\n\n            for (var i = 0; i < ids.length; i++) {\n                ids[i] = parseInt(ids[i]);\n            }\n            var postData = {\n                'ids[]': ids\n            };\n            (0, _common.activateWait)();\n            jQuery.ajax({\n                url: '/usermedia/delete/',\n                data: postData,\n                type: 'POST',\n                crossDomain: false, // obviates need for sameOrigin test\n                beforeSend: function beforeSend(xhr, settings) {\n                    return xhr.setRequestHeader(\"X-CSRFToken\", _common.csrfToken);\n                },\n                success: function success(response, textStatus, jqXHR) {\n                    _this.stopUsermediaTable();\n                    var len = ids.length;\n                    for (var _i = 0; _i < len; _i++) {\n                        delete _this.imageDB[ids[_i]];\n                    }\n                    var elementsId = '#Image_' + ids.join(', #Image_');\n                    jQuery(elementsId).detach();\n                    _this.startUsermediaTable();\n                    (0, _common.addAlert)('success', gettext('The image(s) have been deleted'));\n                },\n                error: function error(jqXHR, textStatus, errorThrown) {\n                    (0, _common.addAlert)('error', jqXHR.responseText);\n                },\n                complete: function complete() {\n                    (0, _common.deactivateWait)();\n                }\n            });\n        }\n    }, {\n        key: \"deleteImageDialog\",\n        value: function deleteImageDialog(ids) {\n            jQuery('body').append('<div id=\"confirmdeletion\" title=\"' + gettext('Confirm deletion') + '\"><p>' + gettext('Delete the image(s)') + '?</p></div>');\n            var diaButtons = {};\n            var that = this;\n            diaButtons[gettext('Delete')] = function () {\n                that.deleteImage(ids);\n                jQuery(this).dialog('close');\n            };\n            diaButtons[gettext('Cancel')] = function () {\n                jQuery(this).dialog('close');\n            };\n            jQuery(\"#confirmdeletion\").dialog({\n                resizable: false,\n                height: 180,\n                modal: true,\n                buttons: diaButtons,\n                create: function create() {\n                    var theDialog = jQuery(this).closest(\".ui-dialog\");\n                    theDialog.find(\".ui-button:first-child\").addClass(\"fw-button fw-dark\");\n                    theDialog.find(\".ui-button:last\").addClass(\"fw-button fw-orange\");\n                },\n                close: function close() {\n                    jQuery(\"#confirmdeletion\").dialog('destroy').remove();\n                }\n            });\n        }\n    }, {\n        key: \"addImageDB\",\n        value: function addImageDB(imagePks) {\n            for (var i = 0; i < imagePks.length; i++) {\n                this.appendToImageTable(imagePks[i]);\n            }\n            this.startUsermediaTable();\n        }\n    }, {\n        key: \"appendToImageTable\",\n        value: function appendToImageTable(pk) {\n            var imageInfo = this.imageDB.db[pk];\n            var $tr = jQuery('#Image_' + pk);\n            var fileType = imageInfo.file_type.split('/');\n\n            if (1 < fileType.length) {\n                fileType = fileType[1].toUpperCase();\n            } else {\n                fileType = fileType[0].toUpperCase();\n            }\n\n            if (0 < $tr.length) {\n                //if the image entry exists, update\n                $tr.replaceWith((0, _templates.usermediaTableTemplate)({\n                    pk: pk,\n                    'cats': imageInfo.cats,\n                    fileType: fileType,\n                    'title': imageInfo.title,\n                    'thumbnail': imageInfo.thumbnail,\n                    'image': imageInfo.image,\n                    'height': imageInfo.height,\n                    'width': imageInfo.width,\n                    'added': imageInfo.added,\n                    localizeDate: _common.localizeDate\n                }));\n            } else {\n                //if this is the new image, append\n                jQuery('#imagelist > tbody').append((0, _templates.usermediaTableTemplate)({\n                    pk: pk,\n                    'cats': imageInfo.cats,\n                    fileType: fileType,\n                    'title': imageInfo.title,\n                    'thumbnail': imageInfo.thumbnail,\n                    'image': imageInfo.image,\n                    'height': imageInfo.height,\n                    'width': imageInfo.width,\n                    'added': imageInfo.added,\n                    localizeDate: _common.localizeDate\n                }));\n            }\n        }\n    }, {\n        key: \"getImageDB\",\n        value: function getImageDB() {\n            var _this2 = this;\n\n            var imageGetter = new _database.ImageDB(0);\n            imageGetter.getDB().then(function (pks) {\n                _this2.imageDB = imageGetter;\n                _this2.mod.categories.addImageCategoryList(imageGetter.cats);\n                _this2.addImageDB(pks);\n            });\n        }\n    }, {\n        key: \"stopUsermediaTable\",\n        value: function stopUsermediaTable() {\n            jQuery('#imagelist').dataTable().fnDestroy();\n        }\n    }, {\n        key: \"startUsermediaTable\",\n        value: function startUsermediaTable() {\n            /* The sortable table seems not to have an option to accept new data\n            added to the DOM. Instead we destroy and recreate it.\n            */\n\n            jQuery('#imagelist').dataTable({\n                \"bPaginate\": false,\n                \"bLengthChange\": false,\n                \"bFilter\": true,\n                \"bInfo\": false,\n                \"bAutoWidth\": false,\n                \"oLanguage\": {\n                    \"sSearch\": ''\n                },\n                \"aoColumnDefs\": [{\n                    \"bSortable\": false,\n                    \"aTargets\": [0, 2, 4]\n                }]\n            });\n            jQuery('#imagelist_filter input').attr('placeholder', gettext('Search for Filename'));\n\n            jQuery('#imagelist_filter input').unbind('focus, blur');\n            jQuery('#imagelist_filter input').bind('focus', function () {\n                jQuery(this).parent().addClass('focus');\n            });\n            jQuery('#imagelist_filter input').bind('blur', function () {\n                jQuery(this).parent().removeClass('focus');\n            });\n\n            var autocompleteTags = [];\n            jQuery('#imagelist .fw-searchable').each(function () {\n                autocompleteTags.push(this.textContent.replace(/^\\s+/g, '').replace(/\\s+$/g, ''));\n            });\n            autocompleteTags = _.uniq(autocompleteTags);\n            jQuery(\"#imagelist_filter input\").autocomplete({\n                source: autocompleteTags\n            });\n        }\n    }, {\n        key: \"bindEvents\",\n        value: function bindEvents() {\n            var _this3 = this;\n\n            var that = this;\n            jQuery(document).on('click', '.delete-image', function () {\n                var ImageId = jQuery(this).attr('data-id');\n                that.deleteImageDialog([ImageId]);\n            });\n\n            jQuery(document).on('click', '.edit-image', function () {\n                var iID = parseInt(jQuery(this).attr('data-id'));\n                var iType = jQuery(this).attr('data-type');\n                var imageUpload = new _uploadDialog.ImageUploadDialog(that.imageDB, iID, 0);\n                imageUpload.init().then(function (imageId) {\n                    that.stopUsermediaTable();\n                    that.appendToImageTable(imageId);\n                    that.startUsermediaTable();\n                });\n            });\n            jQuery('#edit-category').bind('click', function () {\n                _this3.mod.categories.createCategoryDialog();\n            });\n            //open dropdown for image category\n            (0, _common.addDropdownBox)(jQuery('#image-category-btn'), jQuery('#image-category-pulldown'));\n            jQuery(document).on('mousedown', '#image-category-pulldown li > span', function () {\n                jQuery('#image-category-btn > label').html(jQuery(this).html());\n                jQuery('#image-category').val(jQuery(this).attr('data-id'));\n                jQuery('#image-category').trigger('change');\n            });\n            //filtering function for the list of images\n            jQuery('#image-category').bind('change', function () {\n                var catVal = jQuery(this).val();\n                if ('0' === catVal) {\n                    jQuery('#imagelist > tbody > tr').show();\n                } else {\n                    jQuery('#imagelist > tbody > tr').hide();\n                    jQuery('#imagelist > tbody > tr.cat_' + catVal).show();\n                }\n            });\n            //select all entries\n            jQuery('#select-all-entry').bind('change', function () {\n                var newBool = false;\n                if (jQuery(this).prop(\"checked\")) newBool = true;\n                jQuery('.entry-select').each(function () {\n                    this.checked = newBool;\n                });\n            });\n            //open dropdown for selecting action\n            (0, _common.addDropdownBox)(jQuery('#select-action-dropdown'), jQuery('#action-selection-pulldown'));\n            //submit image actions\n            jQuery('#action-selection-pulldown li > span').bind('mousedown', function () {\n                var actionName = jQuery(this).attr('data-action'),\n                    ids = [];\n                if ('' === actionName || 'undefined' == typeof actionName) return;\n                jQuery('.entry-select:checked').each(function () {\n                    ids[ids.length] = jQuery(this).attr('data-id');\n                });\n                if (0 === ids.length) return;\n                switch (actionName) {\n                    case 'delete':\n                        that.deleteImageDialog(ids);\n                        break;\n                }\n            });\n        }\n    }, {\n        key: \"init\",\n        value: function init() {\n            this.bindEvents();\n            this.getImageDB();\n        }\n    }, {\n        key: \"bind\",\n        value: function bind() {\n            var _this4 = this;\n\n            jQuery(document).ready(function () {\n                _this4.init();\n            });\n        }\n    }]);\n\n    return ImageOverview;\n}();\n//# sourceMappingURL=data:application/json;base64,","deps":{"../../common":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/common/index.js","./templates":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/templates.js","../database":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/database.js","../../menu":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/menu/index.js","./categories":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/categories.js","../upload-dialog":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/upload-dialog/index.js"}},"/home/kassawat/fiduswriter-develop/es6-cache/images-overview.es6.js":{"file":"/home/kassawat/fiduswriter-develop/es6-cache/images-overview.es6.js","source":"\"use strict\";\n\nvar _overview = require(\"./es6_modules/images/overview\");\n\nvar theImageOverview = new _overview.ImageOverview();\n\nwindow.theImageOverview = theImageOverview;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlcy1vdmVydmlldy5lczYuanMiXSwibmFtZXMiOlsiSW1hZ2VPdmVydmlldyIsInRoZUltYWdlT3ZlcnZpZXciLCJ3aW5kb3ciXSwibWFwcGluZ3MiOiI7O0FBQUEsQUFBUSxBQUFSLEFBQTRCLEFBQTVCOztBQUVBLElBQUksbUJBQW1CLEFBQUksQUFBSixBQUF2Qjs7QUFFQSxPQUFPLEFBQVAsbUJBQTBCLEFBQTFCIiwiZmlsZSI6ImltYWdlcy1vdmVydmlldy5lczYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0ltYWdlT3ZlcnZpZXd9IGZyb20gXCIuL2VzNl9tb2R1bGVzL2ltYWdlcy9vdmVydmlld1wiXG5cbmxldCB0aGVJbWFnZU92ZXJ2aWV3ID0gbmV3IEltYWdlT3ZlcnZpZXcoKVxuXG53aW5kb3cudGhlSW1hZ2VPdmVydmlldyA9IHRoZUltYWdlT3ZlcnZpZXdcbiJdfQ==","deps":{"./es6_modules/images/overview":"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/index.js"}}},"mtimes":{"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/common/index.js":1485131707908,"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/templates.js":1485131707908,"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/database.js":1485131707904,"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/menu/index.js":1485131707904,"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/categories.js":1485131707908,"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/upload-dialog/templates.js":1485131707908,"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/upload-dialog/index.js":1485131707908,"/home/kassawat/fiduswriter-develop/es6-cache/es6_modules/images/overview/index.js":1485131707908,"/home/kassawat/fiduswriter-develop/es6-cache/images-overview.es6.js":1485131707904},"dependentFiles":{}}